@model IEnumerable<testweb2.Models.Category>

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-input">
        <h4>Homework</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon3">과목</span>
            </div>
            <input type="text" class="form-control" id="basic-url" name="Subject" aria-describedby="basic-addon3">
        </div>

        <!--과목 input-->
        <!--<div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon3">선생님 성함</span>
            </div>
            <input type="text" class="form-control" id="basic-url" name="T_name" aria-describedby="basic-addon3">
        </div>-->
        <!--선생님 이름 input-->

        <div class="input-group mb-3 div-border">
            <div class="mb-3" style="width:100%;">
                학년 반
                <div class="mb-2">
                    <hr />
                    @foreach (var item in Model)
                    {
                        if (string.Compare(item.CatAttribute, "학년 반") == 0)
                        {
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" name="Checkbox[]" value="@item.CatId">
                                <label class="form-check-label" for="inlineCheckbox1">@item.CatName</label>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="mb-3" style="width:100%;">
                과목
                <div class="mb-2">
                    <hr />
                    @foreach (var item in Model)
                    {
                        if (string.Compare(item.CatAttribute, "과목") == 0)
                        {
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" name="Checkbox[]" value="@item.CatId">
                                <label class="form-check-label" for="inlineCheckbox1">@item.CatName</label>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="mb-3" style="width:100%;">
                동아리
                <div class="mb-2">
                    <hr />
                    @foreach (var item in Model)
                    {
                        if (string.Compare(item.CatAttribute, "동아리") == 0)
                        {
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" name="Checkbox[]" value="@item.CatId">
                                <label class="form-check-label" for="inlineCheckbox1">@item.CatName</label>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="mb-3" style="width:100%;">
                기타
                <div class="mb-2">
                    <hr />
                    @foreach (var item in Model)
                    {
                        if (string.Compare(item.CatAttribute, "기타") == 0)
                        {
                            <div class="form-check form-check-inline">
                                <input class="form-check-input" type="checkbox" name="Checkbox[]" value="@item.CatId">
                                <label class="form-check-label" for="inlineCheckbox1">@item.CatName</label>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>

        <!--카테고리 input-->

        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon3">제목</span>
            </div>
            <input type="text" class="form-control" id="title" name="Title" aria-describedby="basic-addon3">
        </div>
        <div class="input-group mb-3">
            <div class="input-group-prepend">
                <span class="input-group-text" id="basic-addon3">날짜</span>
            </div>
            <input type="text" class="form-control" id="Datepick" name="Date" aria-describedby="basic-addon3">
        </div>

        <div class="form-group">
            <div class="mb-3">
                <textarea id="summernote" name="Contents"></textarea>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


<script>
    $(document).ready(function () {
        $('#summernote').summernote({
            height: 700,
            minHeight: null,
            maxHeight: 200,
            focus: true,
            popover: {
                image: [],
                link: [],
                air: []
            }
         });
    });

    function sendFile(file) {
        var form_data = new FormData();
        form_data.append('file', file);
        $.ajax({
            data: form_data,
            type: "POST",
            url: 'Image',
            cache: false,
            contentType: false,
            enctype: 'multipart/form-data',
            processData: false,
            success: function (url) {
                $('#summernote').summernote('insertImage', url);
            }
        });
    }
    $('#summernote').summernote({
        toolbar: [
            ['style', ['style']],
            ['font', ['bold', 'italic', 'underline', 'clear']],
            ['fontname', ['fontname']],
            ['color', ['color']],
            ['para', ['ul', 'ol', 'paragraph']],
            ['height', ['height']],
            ['table', ['table']],
            ['insert', ['link', 'picture', 'hr']],
            ['view', ['fullscreen', 'codeview']],
            ['help', ['help']]
        ],

        callbacks: {
            onImageUpload: function (files) {
                sendFile(files[0]);
                $summernote.summernote('insertNode', imgNode);
            }
        }

    });

    /*function showContent() {
        $('.output').html($('#summernote').summernote('code'));
    }*/
</script>

